[project]
name = "anyschema"
version = "0.1.0"
description = "From pydantic to any frame schema"
readme = "README.md"
authors = [{ name = "FBruzzesi"}]
requires-python = ">=3.10"
dependencies = [
    "narwhals>=1.21.1",
]

[project.optional-dependencies]
pydantic = ["pydantic>=2.0.0"]

dev = [
  "narwhals[polars]",
  "narwhals[pyarrow]",
  "pyarrow-stubs",
  "covdefaults",
  "pre-commit",
  "pytest",
  "pytest-cov",
  "pytest-randomly",
  "pytest-env",
  "hypothesis",
  "typing_extensions",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.ruff]
line-length = 120
target-version = "py310"
fix = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812",
    "ISC001",
    "D100",  # Checks for undocumented public module definitions.
    "D104",  # Checks for undocumented public package definitions.
    "D107",  # Checks for public __init__ method definitions that are missing docstrings.
    "RET505"
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D101",
    "D103",
    "S101",
]

[tool.ruff.lint.isort]
force-single-line = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 6

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
# ignore_missing_imports = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true

[tool.coverage.run]
plugins = ["covdefaults"]
